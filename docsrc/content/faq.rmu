# Hindsite FAQ


## Does hindsite support themes?
Themes are baked in, every [project template directory]({reference}/#projects)
is a theme and the [init command]({reference}/#init-command) is the "theme"
installer.


## Should I enable document and static file text template expansion?
You should only enable [text template]({reference}/#text-templates) expansion if
you need it. If performance is an issue, only enable it for those documents or
directories that need it.


## How can I customize `.date` and `.modtime` template variable formats?
Use the Go [Format function](https://golang.org/pkg/time/#Time.Format). For
example:

    {{.modtime.Format "Monday, 02-Jan-06 15:04:05 MST"}}

NOTE: The `.shortdate`, `.mediumdate` and `.longdate` [document template
variables]({reference}/#document-template-variables) are simpler and preferable
to using `.date` directly.


/*
## How do I escape template expansion in content files?
Quote the template variable as a raw string. For example, to render this:

    {{.body}}

Use this:

    {{`{{.body}}`}}

See [How do I escape "{{" and "}}" delimiters in Go templates?
](https://stackoverflow.com/questions/17641887/how-do-i-escape-and-delimiters-in-go-templates)
*/


## How can I partition documents into separate categories
Put them in separate indexes. [Indexes]({reference}/#indexes) are similar to [Wordpress
categories](https://en.support.wordpress.com/posts/categories-vs-tags/) but they
are folder based so you do not have to assign them explicitly.


## I want a single page document index
Set the [`paginate` configuration
parameter]({reference}/#configuration-parameters) to `-1` and all indexed
documents will appear on the first page.


## I want both paginated and single page document indexes
This technique creates a second nested index:

1. Create a child index with the `paginate` configuration parameter set to `-1`.
   For example:
```
template/
    posts/
        docs.html           # Paginated document index template.
        all/
            docs.html       # Non-paginated (single-page) document index template.
            config.toml     # paginate = -1
```

2. Create a corresponding content child directory and move the content documents into it:
```
content/
    posts/
        all/    # Move documents here from posts.
```

Each index has it's own page `docs.html` template. This technique can be
extended to create multiple additional indexes over a the same indexed document
set.


## Relative or root-relative intra-site links?
A relative link is a URL equivalent to a relative directory path e.g.
`./images/beach.jpg`. A root-relative link is relative to the website root and
begins with a slash e.g. `/images/beach.jpg`.

- Relative links are not affected by the `urlprefix` whereas root-relative links
  are.
- Relative links are broken by changes to the content document location and the
  `permalink` configuration parameter, root-relative links are not.

The `urlprefix` and `permalink` parameters do not tend to change much so this
is probably just something to be aware of. Although you could enable document template
expansion and prefix root-relative URLs with `{{.urlprefix}}`.

## How fast is hindsite?
hindsite compares favorably with [Hugo](https://gohugo.io/) (which bills
itself as "The world’s fastest framework for building websites").

In informal measurements carried out on a site with 5000 Markdown posjs (20MB
total) hindsite was four to five times faster than Hugo on full rebuilds. On
subsequent incremental rebuilds hindsite ranges from six times faster than Hugo
(if related indexes pages are rebuilt) to around ten times slower than Hugo (if
all index pages have to be rebuilt). The `hugo` build command uses approximately
ten times more memory than the `hindsite build` command; the `hugo server`
command consumed a whopping 11.2GB (around 180 times the `hindsite serve`
command).

IMPORTANT: This is not an "apples with apples" comparison, Hugo is more complex
and has more features than hindsite. Differences between the respective themes
is also a factor -- the Hugo theme is heavier than the hindsite theme. As always,
benchmarks are irrelevant if they do not address your specific use cases.

#### hindsite v1.0.0 (windows/amd64) running on Dell XPS27 PC under Windows 10.
_Execution times_::
- `hindsite build` command: 27.72s (full build, average of 5).
- `hindsite serve` command: 29.64s (full rebuild, average of 5).
- `hindsite serve` command: 4.91s (partial build, one document and
  entire index, average of 5).
- `hindsite serve` command: 0.07s (partial build, one document and related index
  pages, average of 5).

  _Memory consumption_::
  - `hindsite build` command: 34MB
  - `hindsite server` command: 62MB

#### Hugo v0.40.3 (windows/amd64) running on Dell XPS27 PC under Windows 10
Hugo setup as per the [Hugo _Quick Start_
instructions](https://gohugo.io/getting-started/quick-start/).

_Execution times_::
- `hugo` command: 162.92s (full build, average of 5).
- `hugo server` command: 128.64s (initial full build).
- `hugo server` command: 0.47s (partial rebuild).

  _Memory consumption_::
  - `hugo` command: 337MB
  - `hugo server` command: 11.2GB

NOTE: Exclude the project folders from Windows Defender anti-virus real-time
protection (not doing this imposed a 4x performance decrease for both hindsite
and Hugo).

The benchmarked hindsite and Hugo projects are available in the downloadable
[hindsite-benchmark.zip](https://drive.google.com/uc?export=download&id=1vm1542RE3W7s9qIYfyYsiTvuwXFZaMP_)
file (7.4MB):

```
├── hindsite
│   ├── build
│   ├── content
│   └── template
└── hugo
    ├── archetypes
    ├── content
    ├── data
    ├── layouts
    ├── public
    ├── static
    └── themes
```

To compare performance run `hindsite` and `hugo` commands from their respective
project directories:

```
cd hindsite
hindsite build .  # Build.
hindsite serve .  # Build and serve.

cd hugo
hugo              # Build.
hugo server       # Build and serve.
```
